{"version":3,"sources":["components/Pagination/Pagination.js","utils/constants.js","components/Loader/Loader.js","components/Table/Table.js","components/Filter/Filter.js","components/AuthorsList/AuthorsList.js","App.js","index.js","components/Table/Table.module.scss"],"names":["Pagination","lastItem","totalPages","page","itemsPerPage","totalItems","handleNextPageClick","handlePrevPageClick","firstItem","onClick","AUTHORS_PER_PAGE","Loader","className","Table","data","topThreeAuthors","useState","displayedData","setDisplayedData","orderedData","setOrderedData","sortOrder","setSortOrder","sortField","setSortField","startIndex","handleOnSort","selectedUsers","slice","useEffect","concat","sort","a","b","map","item","index","name","charAt","count_pub","pageviews","s","first","second","third","Name","Date","toString","Filter","inputFilterName","changeFilter","type","value","onChange","AuthorsList","isLoading","setIsLoading","authors","setAuthors","filteredAuthors","setFilteredAuthors","setTopThreeAuthors","setPage","filter","setFilter","setTotalPages","findThreeTopAuthors","array","sortedArray","fetch","response","json","Math","ceil","length","fetchData","e","currentTarget","normalizedFilter","toLowerCase","console","log","author","includes","num","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6baf63de.chunk.js","sourcesContent":["function Pagination({\r\n  totalPages,\r\n  page,\r\n  itemsPerPage,\r\n  totalItems,\r\n  handleNextPageClick,\r\n  handlePrevPageClick,\r\n}) {\r\n  let firstItem = (page - 1) * itemsPerPage + 1;\r\n  let lastItem;\r\n\r\n  if (itemsPerPage * page > totalItems) {\r\n    lastItem = totalItems;\r\n  } else {\r\n    lastItem = firstItem + itemsPerPage - 1;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {totalPages > 1 ? (\r\n        <div>\r\n          {page > 1 ? (\r\n            <button onClick={() => handlePrevPageClick(page)}>prev</button>\r\n          ) : null}\r\n          <div>{`${firstItem} - ${lastItem}`}</div>\r\n\r\n          {page < totalPages ? (\r\n            <button onClick={() => handleNextPageClick(page)}>next</button>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","export const AUTHORS_PER_PAGE = 10;\r\n","import './Loader.scss';\r\n\r\nfunction Loader() {\r\n  return <div className=\"lds-dual-ring\"></div>;\r\n}\r\nexport default Loader;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { AUTHORS_PER_PAGE } from '../../utils/constants';\r\nimport s from './Table.module.scss';\r\n\r\nfunction Table({ data, page, topThreeAuthors }) {\r\n  const [displayedData, setDisplayedData] = useState([]);\r\n  const [orderedData, setOrderedData] = useState([]);\r\n  const [sortOrder, setSortOrder] = useState(1);\r\n  const [sortField, setSortField] = useState('pageviews');\r\n\r\n  const startIndex = (page - 1) * AUTHORS_PER_PAGE;\r\n\r\n  const handleOnSort = sortField => {\r\n    setSortField(sortField);\r\n\r\n    const selectedUsers = orderedData.slice(\r\n      startIndex,\r\n      startIndex + AUTHORS_PER_PAGE,\r\n    );\r\n    setDisplayedData(selectedUsers);\r\n    sortOrder === 1 ? setSortOrder(-1) : setSortOrder(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const clonedData = data.concat();\r\n\r\n    const orderedData = clonedData.sort(function (a, b) {\r\n      let result =\r\n        a[sortField] > b[sortField] ? -1 : a[sortField] < b[sortField] ? 1 : 0;\r\n      return result * sortOrder;\r\n    });\r\n\r\n    setOrderedData(orderedData);\r\n\r\n    const selectedUsers = orderedData.slice(\r\n      startIndex,\r\n      startIndex + AUTHORS_PER_PAGE,\r\n    );\r\n    setDisplayedData(selectedUsers);\r\n  }, [data, startIndex, page, sortField, sortOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Letter</th>\r\n            <th onClick={() => handleOnSort('name')}>\r\n              Name{sortField === 'name' ? <small>sort</small> : null}\r\n            </th>\r\n            <th>awards</th>\r\n            <th onClick={() => handleOnSort('pageviews')}>\r\n              pageviews{sortField === 'pageviews' ? <small>sort</small> : null}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {displayedData\r\n            ? displayedData.map((item, index) => (\r\n                <tr key={item.Name + Date() + item.pageviews.toString()}>\r\n                  <td>{startIndex + index + 1}</td>\r\n                  <td>{item.name.charAt(0)}</td>\r\n                  <td>\r\n                    {item.name} <span>{item.count_pub} публ.</span>\r\n                  </td>\r\n                  <td\r\n                    className={\r\n                      item.pageviews === topThreeAuthors[0].pageviews\r\n                        ? s.first\r\n                        : item.pageviews === topThreeAuthors[1].pageviews\r\n                        ? s.second\r\n                        : item.pageviews === topThreeAuthors[2].pageviews\r\n                        ? s.third\r\n                        : 'empty'\r\n                    }\r\n                  ></td>\r\n                  <td>{item.pageviews}</td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default Table;\r\n","function Filter({ inputFilterName, changeFilter }) {\r\n  return (\r\n    <label>\r\n      Find authors by name\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={inputFilterName}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nexport default Filter;\r\n","import { useEffect, useState } from 'react';\r\nimport Pagination from '../Pagination';\r\nimport { AUTHORS_PER_PAGE } from '../../utils/constants';\r\nimport Loader from '../Loader';\r\nimport Table from '../Table';\r\nimport Filter from '../Filter';\r\n\r\nfunction AuthorsList() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [authors, setAuthors] = useState([]);\r\n  const [filteredAuthors, setFilteredAuthors] = useState(null);\r\n  const [topThreeAuthors, setTopThreeAuthors] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [filter, setFilter] = useState('');\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const findThreeTopAuthors = array => {\r\n    const clonedData = array.concat();\r\n    const sortedArray = clonedData\r\n      .sort(function (a, b) {\r\n        if (a.pageviews < b.pageviews) {\r\n          return 1;\r\n        }\r\n        if (a.pageviews > b.pageviews) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      })\r\n      .slice(0, 3);\r\n    setTopThreeAuthors(sortedArray);\r\n  };\r\n\r\n  const handleNextPageClick = num => {\r\n    if (num === totalPages) {\r\n      return;\r\n    } else {\r\n      setPage((num += 1));\r\n    }\r\n  };\r\n  const handlePrevPageClick = num => {\r\n    if (num === 1) {\r\n      return;\r\n    } else {\r\n      setPage((num -= 1));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setFilter(e.currentTarget.value);\r\n    const normalizedFilter = e.currentTarget.value.toLowerCase();\r\n    console.log(normalizedFilter);\r\n    const filteredAuthors = authors.filter(author =>\r\n      author.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    console.log(filteredAuthors);\r\n\r\n    setFilteredAuthors(filteredAuthors);\r\n    setTotalPages(Math.ceil(filteredAuthors.length / AUTHORS_PER_PAGE));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const response = await fetch('data.json');\r\n\r\n      const data = await response.json();\r\n\r\n      setAuthors(data);\r\n      findThreeTopAuthors(data);\r\n      setTotalPages(Math.ceil(data.length / AUTHORS_PER_PAGE));\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Authors List</h1>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <Filter inputFilterName={filter} changeFilter={handleInputChange} />\r\n          <Table\r\n            data={filteredAuthors ? filteredAuthors : authors}\r\n            page={page}\r\n            totalPages={totalPages}\r\n            topThreeAuthors={topThreeAuthors}\r\n          />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            itemsPerPage={AUTHORS_PER_PAGE}\r\n            page={page}\r\n            totalItems={\r\n              filteredAuthors ? filteredAuthors.length : authors.length\r\n            }\r\n            handleNextPageClick={handleNextPageClick}\r\n            handlePrevPageClick={handlePrevPageClick}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default AuthorsList;\r\n","import AuthorsList from './components/AuthorsList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AuthorsList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"first\":\"Table_first__3CToh\",\"second\":\"Table_second__i-oUB\",\"third\":\"Table_third__2X436\"};"],"sourceRoot":""}